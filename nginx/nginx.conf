server {
  listen 80;

  location / {
    default_type                    text/html;

    set_by_lua                      $cookie_notif '
      return ngx.var.cookie_cookieNotification
    ';

    # Add "cookieNotification" to hashing.
    set                             $key "$uri$cookie_notif";
    set_escape_uri                  $escaped_key $key;

    # Don't cache 404 responses
    srcache_store_statuses          200 301 302;

    # Honour the request headers Cache-Control and Pragma.
    srcache_request_cache_control   on;

    # If the request contains an "Authorization" cookie, bypass the cache.
    set_by_lua                      $skip '
      if ngx.var.cookie_Authorization then
        return 1
      end
      return 0
    ';

    srcache_fetch_skip              $skip;
    srcache_store_skip              $skip;

    proxy_pass                      http://docker.for.mac.host.internal:4567;

    srcache_fetch                   GET /redis $key;
    srcache_store                   PUT /redis2 key=$escaped_key&exptime=$srcache_expire;

    # Add some custom headers to check hit or miss.
    add_header                      X-Cache $srcache_fetch_status;
  }

  location = /redis {
    internal;

    set_md5                         $redis_key $args;
    redis_pass                      docker.for.mac.host.internal:6379;
  }

  location = /redis2 {
    internal;

    set_unescape_uri                $exptime $arg_exptime;
    set_unescape_uri                $key $arg_key;
    set_md5 $key;

    redis2_query                    set $key $echo_request_body;
    redis2_query                    expire $key $exptime;
    redis2_pass                     docker.for.mac.host.internal:6379;
  }
}
